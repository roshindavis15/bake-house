<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        body {
            background-color: #fdd7e4; /* Light pink background color */
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h3>Edit Product</h3>
                    <p>Customize your product</p>
                </div>
                <div class="card-body">
                    <form action="/admin/editProduct" method="post" id="editForm"> 
                        <input type="hidden" name="product_id" id="productId" value="<%= product._id %>">
                        
                        <div class="form-group">
                            <label for="name">Product Name</label>
                            <input type="text" class="form-control" id="name" name="name" value="<%=product.name%>" placeholder="Enter Product Name" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="price">Price</label>
                            <input type="number" class="form-control" id="price" name="price" value="<%=product.price%>" placeholder="Enter Price" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="stock">Stock</label>
                            <input type="number" class="form-control" id="stock" name="stock" value="<%=product.stock%>" placeholder="Enter Stock" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" name="description" placeholder="Enter Product Description" required><%=product.description%></textarea>
                        </div>
                        
                     
                        
                        <button type="submit" class="btn btn-danger">Update Product</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("editForm");
    const nameInput = document.getElementById("name");
    const productIdInput = document.getElementById("productId");
    const productPriceInput = document.getElementById("price");
    const stockInput = document.getElementById("stock");
    const descriptionInput = document.getElementById("description");

    form.addEventListener("submit", async (event) => {
        event.preventDefault();

        const newName = nameInput.value;
        const productId = productIdInput.value;
        const newPrice = parseFloat(productPriceInput.value);
        const newStock = parseFloat(stockInput.value);
        const newDescription = descriptionInput.value;

        const nameRegex = /^[A-Za-z\s]+$/;
        const isNameValid = nameRegex.test(newName);

        if (!isNameValid) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Name',
                text: 'Please enter a valid product name containing only alphabetic characters and spaces.'
            });
            return;
        }

        if (newPrice < 0 || newStock < 0 || isNaN(newPrice) || isNaN(newStock)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Value',
                text: 'Price and Stock should be valid positive numbers.'
            });
            return;
        }

        try {
            const response = await fetch('/admin/editProduct', {
                method: 'POST',
                body: JSON.stringify({
                    name: newName,
                    productId: productId,
                    price: newPrice,
                    stock: newStock,
                    description: newDescription
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();
            if (data.productNameAlreadyExist === true) {
                Swal.fire({
                    icon: 'error',
                    title: 'Already Exist',
                    text: 'The Name With A Product Already Exists.'
                });
            } else {
                Swal.fire({
                    icon: 'success',
                    title: 'Product Updated',
                    text: 'The product has been successfully updated.'
                }).then(() => {
                    window.location.href = '/admin/productIndex';
                });
            }
        } catch (error) {
            console.error('Error:', error);
            // Handle error, show error message to the user, etc.
        }
    });
});


        
    </script>
</body>
</html>
