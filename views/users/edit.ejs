<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #fdd7e4; 
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h3>Edit Profile</h3>
                    <p>Customize your  profile</p>
                </div>
                <div class="card-body">
                    <form action="/edit" method="post" id="update-profile-form">
                        <input type="hidden" name="user_id" value="<%= user._id.toString() %>">
                        <div id="error-message" class="text-danger"></div>

                        
                        <div class="form-group">
                            <label for="name">Your Name</label>
                            <input type="text" class="form-control" id="name" name="name" value="<%= user.name %>" placeholder="Enter Your Name" required>
                            <span id="error-name" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group">
                            <label for="email">Email Address</label>
                            <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" placeholder="Enter Your Email" required>
                            <span id="error-email" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group">
                            <label for="mobile">Contact Number</label>
                            <input type="text" class="form-control" id="mobile" name="mobile" value="<%= user.mobile %>" placeholder="Enter Your Contact Number" required>
                            <span id="error-mobile" class="text-danger"></span>
                        </div>
                        
                        <button type="submit" class="btn btn-danger  profileUpdateBtn">Update Profile</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const profileUpdateBtn = document.querySelector('.profileUpdateBtn');
    profileUpdateBtn.addEventListener('click', checkProfileAndSubmit);
    
    async function checkProfileAndSubmit(e) {
        e.preventDefault();
    
        // Clear previous error messages
        clearErrorMessages();
    
        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        const mobile = document.getElementById('mobile').value;
    
        // Validate name
        if (name.trim() === '') {
            displayErrorMessage('error-name', 'Please enter your name.');
            return;
        }
    
        // Validate email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
            displayErrorMessage('error-email', 'Please enter a valid email address.');
            return;
        }
    
        // Validate mobile number
        const mobileRegex = /^[0-9]{10}$/;
        if (!mobileRegex.test(mobile)) {
            displayErrorMessage('error-mobile', 'Please enter a valid 10-digit mobile number.');
            return;
        }
    
        // If all validations pass, submit the form
        submitForm({ name, email, mobile });
    }
    
    function displayErrorMessage(elementId, message) {
        // Display error message under the specified element
        const errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
    }
    
    function clearErrorMessages() {
        // Clear all error messages
        const errorElements = document.querySelectorAll('.text-danger');
        errorElements.forEach(element => {
            element.innerText = '';
        });
    }
    
    async function submitForm(data) {
        // Submit the form with the validated data
        fetch('/edit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(async data => {
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Profile Updated',
                    text: 'The profile has been updated successfully!',
                });
                location.href = '';
                return;
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'User Already Exists',
                    text: 'This email already exists. Please try with a different email.',
                });
                return;
            }
        });
    }
    </script>
    




</body>
</html>